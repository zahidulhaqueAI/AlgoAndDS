https://leetcode.com/problems/happy-number/submissions/
A happy number is a number defined by the following process:

Starting with any positive integer, replace the number by the sum of the squares of its digits.
Repeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.
Those numbers for which this process ends in 1 are happy.
Return true if n is a happy number, and false if not.

class Solution {
public boolean isHappy(int n) {
		int slow = n;
		int fast = n;
		
		do {
			slow = findSquare(slow);
			fast = findSquare(findSquare(fast));
		}while(slow != fast);
		// check whether sum == 1
		if(slow == 1) {
			return true;
		}
		return false;
	}
	
	// find square of the given number
	private int findSquare(int num) {
		int ans = 0;
		while (num > 0) {
			int r = num % 10;
			ans += r*r;
			num = num/10;
		}
		return ans;
	}
}
