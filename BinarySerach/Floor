//floor : largest number <= target. Immediate smallest
public class Floor {

	public int floor(int[] arr, int target) {
		return index(arr, target);
	}

	private int index(int[] arr, int target) {
		// boundry condition
		if (target < arr[0]) {
			return -1;
		}

		int start = 0;
		int end = arr.length - 1;

		while (start <= end) {
			// find middle element
			int mid = start + (end - start) / 2;

			// element found
			if (target == arr[mid]) {
				return mid;
			} else if (target < arr[mid]) {
				end = mid - 1;
			} else if (target > arr[mid]) {
				start = mid + 1;
			}
		}
		return end;
	}
}
