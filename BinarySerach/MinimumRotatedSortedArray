class Solution {
    public int findMin(int[] nums) {
        int pivot = findPivot(nums);
        if(pivot == -1) {
            // means array is not rotated
            return nums[0];
        }
        return nums[pivot+1];
    }
        
    // find pivot and based on the pivot value will decide the smallest value
    private int findPivot(int[] nums) {
            int start = 0;
            int end = nums.length - 1;
            
            while(start <= end){
                int mid = start + (end - start) / 2;
                
                // case 1 : 
                if(mid < end && nums[mid] > nums[mid+1]) {
                    return mid;
                }
                // case 2 :
                if(mid > start && nums[mid] < nums[mid -1]) {
                    return mid -1;
                }
                // case 3 : 
                if(nums[0] >= nums[mid]) {
                    end = mid - 1;
                }
                // case 4 :
                if(nums[0] < nums[mid]) {
                    start = mid + 1;
                }
            }
            // this is the condition for array not rotated
            return -1;
        }// findPivot
}
