
// https://leetcode.com/problems/peak-index-in-a-mountain-array/
// Bitonic array also known as mountain array
/*
  There exists some i with 0 < i < arr.length - 1 such that:
	arr[0] < arr[1] < ... arr[i-1] < arr[i]
	arr[i] > arr[i+1] > ... > arr[arr.length - 1]
 */
public class BitonicArray {

	public int search(int[] arr) {

		int start = 0;
		int end = arr.length - 1;
		
		while (start < end) {
			int mid = start + (end - start) / 2;

			if (arr[mid] > arr[mid + 1]) {
				// either found the largest element.If not then iterate on the
				// left side of an array to find the largest element
				end = mid;
			} else {
				// in the ascending part of an array
				start = mid + 1;
			}
		}
		return start; // or end or are same
	}
}
